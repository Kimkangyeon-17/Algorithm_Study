# 무지성 하드코딩 실행 시간 : 0.06146s
T = int(input())

for tc in range(1, T + 1):
    N = int(input())

    arr = []

    i = N // 50000
    j = (N - (50000 * i)) // 10000
    k = (N - (50000 * i) - (10000 * j)) // 5000
    l = (N - (50000 * i) - (10000 * j) - (5000 * k)) // 1000
    m = (N - (50000 * i) - (10000 * j) - (5000 * k) - (1000 * l)) // 500
    n = (N - (50000 * i) - (10000 * j) - (5000 * k) - (1000 * l) - (500 * m)) // 100
    o = (
        N - (50000 * i) - (10000 * j) - (5000 * k) - (1000 * l) - (500 * m) - (100 * n)
    ) // 50
    p = (
        N
        - (50000 * i)
        - (10000 * j)
        - (5000 * k)
        - (1000 * l)
        - (500 * m)
        - (100 * n)
        - (50 * o)
    ) // 10

    print(
        f"#{tc}",
    )
    print(i, j, k, l, m, n, o, p)

-----------------------------------------------
'''
# 정석 풀이, 실행시간 : 0.05731s (별 차이 없음)
T = int(input())

for tc in range(1, T + 1):
    N = int(input())
    
    # 화폐 종류 (큰 것부터)
    money = [50000, 10000, 5000, 1000, 500, 100, 50, 10]
    result = []
    
    for coin in money:
        count = N // coin  # 해당 화폐로 몇 개 사용할지
        result.append(count)
        N = N % coin  # 남은 금액
    
    print(f"#{tc}")
    print(*result)

    '''