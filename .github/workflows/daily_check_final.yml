# .github/workflows/daily_check_final.yml
name: 📊 Daily Check (Organization)

on:
  workflow_dispatch:  # 수동 실행
  schedule:
    - cron: '0 15 * * *'  # 매일 한국시간 오후 12시 (UTC 15시)
    
jobs:
  check-daily-progress:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 체크아웃
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        fetch-depth: 0
        # 최신 상태로 강제 동기화
        ref: master
      
    - name: 🔄 최신 상태 확인 및 동기화
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      run: |
        echo "🔄 원격 저장소와 동기화 중..."
        git fetch origin master
        git reset --hard origin/master
        echo "✅ 최신 상태로 동기화 완료"
        
    - name: 🐍 Python 설정
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: 🔧 Git 설정
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: 🔍 환경 및 구조 확인
      run: |
        echo "📂 현재 디렉토리: $(pwd)"
        echo "📁 루트 파일 목록:"
        ls -la
        echo ""
        echo "📄 README 파일들:"
        find . -name "README.md" 2>/dev/null || echo "README 파일 없음"
        echo ""
        echo "📁 주차 폴더 구조:"
        ls -la "8월3주차/" 2>/dev/null || echo "8월3주차 폴더 없음"
        echo ""
        echo "📅 날짜 폴더 구조:"
        ls -la "8월3주차/0821/" 2>/dev/null || echo "0821 폴더 없음"
        ls -la "8월3주차/0820/" 2>/dev/null || echo "0820 폴더 없음"
        echo ""
        echo "🗂️ 문제 폴더들:"
        find "8월3주차/" -type d -name "BOJ_*" 2>/dev/null || echo "BOJ 문제 폴더 없음"
        find "8월3주차/" -type d -name "SWEA_*" 2>/dev/null || echo "SWEA 문제 폴더 없음"
        echo ""
        echo "📝 Python 파일들:"
        find "8월3주차/" -name "*.py" 2>/dev/null || echo "Python 파일 없음"
        
    - name: 📊 일일 진행상황 체크
      run: |
        echo "🚀 일일 알고리즘 스터디 체크 시작!"
        python scripts/daily_check.py
        
    - name: 📈 진행률 업데이트
      run: |
        echo "📈 진행률 업데이트 시작!"
        python scripts/update_progress.py
        
    - name: 🔍 실행 후 상세 확인
      run: |
        echo "🔍 실행 후 상태 확인"
        git status
        echo ""
        echo "📊 생성된 로그:"
        ls -la logs/ 2>/dev/null || echo "로그 폴더 없음"
        echo ""
        echo "📋 로그 내용 미리보기:"
        TODAY=$(date +%Y%m%d)
        if [ -f "logs/daily_log_${TODAY}.json" ]; then
          echo "=== 오늘의 일일 로그 ==="
          head -20 "logs/daily_log_${TODAY}.json"
        fi
        echo ""
        if [ -f "logs/progress_log_${TODAY}.json" ]; then
          echo "=== 오늘의 진행률 로그 ==="
          head -20 "logs/progress_log_${TODAY}.json"
        fi
        
    - name: 💾 변경사항 커밋 및 푸시 (충돌 방지 로직 추가)
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          echo "📝 변경사항 발견 - 자동 커밋 진행"
          
          # 다시 한번 최신 상태 확인
          echo "🔄 푸시 전 최신 상태 재확인..."
          git fetch origin master
          
          # 원격과 차이가 있는지 확인
          if ! git diff --quiet HEAD origin/master; then
            echo "⚠️ 원격에 새로운 변경사항 발견 - 병합 시도"
            git pull --no-edit origin master || {
              echo "❌ 자동 병합 실패 - 수동 처리 필요"
              exit 1
            }
          fi
          
          # 변경사항 추가 및 커밋
          git add .
          git commit -m "📊 자동 업데이트: $(date +'%Y-%m-%d %H:%M') - Organization 통합 관리"
          
          # 푸시 재시도 로직
          MAX_RETRIES=3
          RETRY_COUNT=0
          
          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            echo "🚀 푸시 시도 ($((RETRY_COUNT + 1))/$MAX_RETRIES)..."
            
            if git push origin master; then
              echo "✅ 푸시 성공!"
              break
            else
              echo "❌ 푸시 실패 - 재시도 준비 중..."
              RETRY_COUNT=$((RETRY_COUNT + 1))
              
              if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
                echo "🔄 최신 변경사항 다시 가져오기..."
                git fetch origin master
                git pull --no-edit origin master || {
                  echo "❌ 병합 실패"
                  exit 1
                }
                echo "⏳ 3초 대기 후 재시도..."
                sleep 3
              else
                echo "❌ 최대 재시도 횟수 초과 - 실패"
                exit 1
              fi
            fi
          done
        else
          echo "ℹ️ 변경사항 없음 - 커밋할 내용이 없습니다"
        fi

    - name: 📊 결과 요약
      run: |
        echo "🎉 GitHub Actions 실행 완료!"
        echo "🏢 Organization: about-algorithm-study"
        echo "📈 스터디 멤버: kky, sjh, ocm, smk, cjg"
        echo "📁 파일 구조: 8월3주차/날짜/문제폴더/파일명.py"
        echo "🤖 자동화: 일일 체크 + 진행률 업데이트 + Organization 동기화"
        echo "🔗 결과 확인: https://github.com/about-algorithm-study/About_Algorithm_Study"